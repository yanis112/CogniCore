# Nom du workflow
name: Publish Python Package to PyPI with UV

# Déclencheurs
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: # Ajout du déclencheur manuel pour les tests

permissions:
  id-token: write

jobs:
  # --- JOB 1: TESTER LE CODE AVEC UV ET PYTEST ---
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      # CORRECTION : Créer, activer, installer et tester dans la MÊME étape
      - name: Install dependencies and run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # 1. Créer l'environnement virtuel
          uv venv
          
          # 2. Activer l'environnement virtuel (crucial !)
          source .venv/bin/activate
          
          # 3. Installer les dépendances dans le venv activé
          uv pip install -e ".[dev]"
          
          # 4. Lancer les tests dans le venv activé
          pytest

  # --- JOB 2: CONSTRUIRE ET PUBLIER LE PACKAGE ---
  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      # CORRECTION : Créer, activer, installer, construire et publier dans la MÊME étape
      - name: Build and publish package
        run: |
          # 1. Créer l'environnement virtuel
          uv venv
          
          # 2. Activer l'environnement virtuel
          source .venv/bin/activate
          
          # 3. Installer les outils de build
          uv pip install build twine
          
          # 4. Construire le package
          python -m build
          
          # 5. Publier sur PyPI
          twine upload dist/* --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}