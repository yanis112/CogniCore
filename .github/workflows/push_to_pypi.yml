# Nom du workflow
name: Publish Python Package to PyPI with UV

# Déclencheur : push sur un tag commençant par 'v'
on:
  push:
    tags:
      - 'v*'

# Définition des permissions
permissions:
  id-token: write

jobs:
  # --- JOB 1: TESTER LE CODE AVEC UV ET PYTEST ---
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      # CORRECTION : Créer l'environnement virtuel avant d'installer quoi que ce soit
      - name: Create a virtual environment
        run: uv venv

      # Cette commande va maintenant fonctionner car uv détectera le .venv créé
      - name: Install dependencies with uv
        run: uv pip install -e ".[dev]"

      - name: Run tests with pytest
        run: pytest

  # --- JOB 2: CONSTRUIRE ET PUBLIER LE PACKAGE ---
  publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up uv
        uses: astral-sh/setup-uv@v1
        
      # CORRECTION : Créer aussi un environnement virtuel dans ce job
      - name: Create a virtual environment
        run: uv venv

      - name: Install build tools with uv
        run: uv pip install build twine

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        run: twine upload dist/* --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}